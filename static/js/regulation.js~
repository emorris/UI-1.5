 $(document).ready ( function() {

	 console.log('query: ' + display_name);

	load_summary(dbid); 
	load_go_processes(dbid, protein_name);
	load_domains(dbid, protein_name);
	load_bind_logo(dbid, protein_name);
	load_reg_targets(dbid, protein_name);
	load_regulators(dbid, title_name);


 $('#page-nav').affix({
	offset:$('#page-nav').position()
});


}); // end document ready


//********** LOAD SUMMARY AND REFS **********************//

function load_summary(query) {
	var query = query;

	$.getJSON('http://sgd-dev-2.stanford.edu/yeastmine_backend/regulation/summary/'+query)
	.done(function(data) {
		if ($.isEmptyObject(data)) {
			console.log("Empty object");
			hide_nav('summary');
			hide_nav('refs');
			refresh_scrollspy();
		} else {

			if (data.publication.length > 0) {
	   
				var sum = data.summary;
		    	    	var refs = []; 
			
				$('#summary').append("<div id='paragraph'><p>"+ sum + "</p></div>");
				$('#refs').append("<h3>References</h3><div id='ref-list'></div>");
	
		    	 	$.each(data.publication, function(index, obj) {
					var num = index + 1;
					var cit_i = obj.citation.indexOf(')');
	
					var citArray = [obj.citation.slice(0, cit_i), obj.citation.slice(cit_i + 1)];

					citArray[0] = '<a href=' + ref_url + obj.pmid + '>' + citArray[0] + ')</a>';
					
	        	 		 $("#ref-list").append("<div class='citation'>" + citArray.join("") + "</div>");
				});
	
			} // end if

		$('span#summary-nav').replaceWith("<li id='summary-li'><a href='#summary'>Summary</a></li>");
		refresh_scrollspy(); 
		} // end else
	});
}

//************ LOAD BINDING SITE MOTIFS  ***************//

function load_bind_logo(query, protein) {
	var query = query;

	var prot_name = protein;
	
	$('#binding-site-seq-logos').append("<hr>");

	$('#binding-site-seq-logos').append("<h2>" + prot_name + 
	" Binding Site Motifs</h2><div><em> \
	Click on a motif to view <a href='http://yetfasco.ccbr.utoronto.ca'>YeTFaSCo</a> record</em></div>");
		
	$.getJSON('http://sgd-dev-2.stanford.edu/yeastmine_backend/regulation/logos/'+query)
	.done(function(data) {
		if ($.isEmptyObject(data)) {
		//	console.log("Empty logo obj");
			hide_nav('binding-site-seq-logos');

		} else {
		//	$('#binding-site-seq-logos').append("<hr>");

		//	$('#binding-site-seq-logos').append("<h2>" + prot_name + 
		//		" Binding Site Motifs</h2><div><em> \
	//			Click on a motif to view <a href='http://yetfasco.ccbr.utoronto.ca'>YeTFaSCo</a> record</em></div>");
//
		//	console.log('data: ' + data);

		$.each(data, function(index, row) {
			var img_name = $.trim(row);

			var filename_array = img_name.split(".");
			var link = filename_array[0].split("_");
				
			var url = 'http://yetfasco.ccbr.utoronto.ca/MotViewLong.php?PME_sys_qf2='+ link[1];

//		//	console.log(row + "* NEW URL: " + url );
		
			$('#binding-site-seq-logos').append('<a href="' + url + '"><img class="yetfasco"  src="/static/imgs/YeTFaSCo_Logos/' + row + '" alt="Binding Site Sequence Logo"></a>');
		});
		
		$('#binding-site-seq-logos').append("<div id='expt-binding-sites'></div>");
		
		$("#expt-binding-sites").append("<h4>View binding sites in <a href='" + gbrowse_url + "' target='_blank'>GBrowse</a>.</h4>");

		$('span#binding-sites-nav').replaceWith("<li id='binding-site-seq-logos-li'><a href='#binding-site-seq-logos'>Binding Site Motifs</a></li>");
	
		} // end else
	refresh_scrollspy();
	});
}


//************** REGULATORY TARGETS *****************//

function load_reg_targets(query, protein) {
	
	var feat = query;
	var prot_name = protein;
	var num_genes = new Object();
	 
	// assign number of targets to a variable //

	$.getJSON('http://sgd-dev-2.stanford.edu/yeastmine_backend/regulation/target_count/' + feat)
	.done(function(data) {  
		num_targets = data;

		if (num_targets > 0) {

		// make section //
	
		$("#regulatory-targets").append("<div class='spacer'></div><hr>");

		$("#regulatory-targets").append("<h2>"+ prot_name + " Regulatory Targets (" + num_targets + " total)</h2>");
	
		//CREATE empty datatables

	$("#regulatory-targets").append("<table id='regulatory-targets-table'><thead><tr><th>Systematic name</th><th>Gene name</th><th>Evidence</th><th>Reference</th><th>Source</th></tr></thead><tbody>");

		var target_table_params = new Object();
	
		if (num_targets > 10) {

			target_table_params = pagination_dT;

		} else {

			target_table_params = no_pagination_dT;
		}
		
		target_table_params.sAjaxSource= 'http://sgd-dev-2.stanford.edu/yeastmine_backend/regulation/target/' + query; 

		targetTable = $('#regulatory-targets-table').dataTable(target_table_params);

		// get all target data for table //

		$.getJSON('http://sgd-dev-2.stanford.edu/yeastmine_backend/regulation/target/' + query)
		.done(function(table_data) {
			if ($.isEmptyObject(table_data)) {
	
				console.log('No regulatory targets loaded');
			
			} else {
			
				targetTable.fnAddData(data.aaData);
	//	var processData = new Array();

	//	$.each(table_data, function(index, obj) {
	//			processData.push([
	//				'<a href=\''+feat_url + obj.dbid + '\'>'+ obj.feature_name+'</a>',
	//				obj.gene_name,
	//				obj.evidence,
	//				'<a href=\''+ ref_url + obj.pmid +'\'>'+ obj.citation + '</a>',
	//				obj.source]);

						
	//	});

	//	targetTable.fnAddData(processData);

		refresh_scrollspy();

		} // end else
	
		}); //end inner done
		
	} else { // end if > 0
		hide_nav('regulatory-targets'); 
	}
	}); // end done function

} // end load_reg_targets


//************** GO PROCESSES **************//

function load_go_processes(query, protein) {

	var feat = query;
	var protein = protein; 
	
	// get number of targets //

	$.getJSON('http://sgd-dev-2.stanford.edu/yeastmine_backend/regulation/target_count/' + feat)
	.done(function(data) {

	num_targets = data; 
 	
	if (num_targets > 0) {
		$("#shared-GO-processes").append("<div class='spacer'><hr></div>");
		$("#shared-GO-processes").append("<h2>Shared GO Processes Among " + protein + " Regulatory Targets (" + num_targets +" total)</h2>");	
		$("#shared-GO-processes").append("<table id='GO-table'><thead><tr><th>GO Term</th><th>P-value</th><th>Number of genes</th></tr></thead><tbody>");

		var go_table_params = new Object();

		go_table_params = pagination_dT;
		go_table_params.aoColumns = [null, {"sWidth":"20%", "sType": "scientific"},{"sWidth": "15%"}];		   go_table_params.sAjaxSource = 'http://sgd-dev-2.stanford.edu/yeastmine_backend/regulation/shared_go_process/' + feat;
			
		goTable = $('#GO-table').dataTable(go_table_params);
	
		$.getJSON('http://sgd-dev-2.stanford.edu/yeastmine_backend/regulation/shared_go_process/' + feat)
	.done(function(data) {
		if ($.isEmptyObject(data) || data.length == 0) {

		//	console.log('No GO processes returned');
			hide_nav('shared-GO-processes');
		} else {
			
//			oTable = $('#GO-table').dataTable(table_params);
	
			//if (data.aaData.length > 10) {
				
	
		//	} else {

		//		table_params = no_pagination_dT;
		//	}

			goTable.fnAddData(data.aaData);

			//oTable = $('#GO-table').dataTable(table_params);

//			$.each(data, function(index, obj) {	
//				var goArray = obj.goid.split(":");			

//				$('#GO-table').dataTable().fnAddData([
//						'<a href=\''+go_url + goArray[1] + '\'>'+ obj.go_term+'</a>',
//						obj.pvalue,
//						obj.matches,
//						]);

//			});
		

		} // end else

	});

//			$("span#GO-nav").replaceWith("<li id='shared-GO-processes-li'><a href='#shared-GO-processes'>Shared GO Processes</a></li>");

	refresh_scrollspy();
	}
});

} // end go_processes


// ******* LOAD DOMAIN SECTION ******//


function load_domains(feat_name, protein) {
	var query = feat_name;
	var protein = protein;
	var jaspar = new Object();

	console.log('trying to load domains');

	$.getJSON('http://sgd-dev-2.stanford.edu/yeastmine_backend/regulation/domain/' + query)
	.done(function(data) {
		if ($.isEmptyObject(data)) {
			console.log('No domain info retrieved.');
			hide_nav('domains');
		} else {

			console.log('retrieved domain info');
	
			$("#domains").append("<hr>");

			$("#domains").append("<h2>"+protein+ " Domains and Motifs (" + data.length + " total)</h2>" +
				"<div><table id='domain-table'><thead><tr><th>Protein coordinates</th><th>Accession ID</th><th>Description</th><th>Source</th></tr></thead><tbody>");

			
			var table_params = new Object();

			if (data.length > 10) {
				table_params = pagination_dT;
	
			} else {

				table_params = no_pagination_dT;
			}
			table_params.bAutoWidth = false;
			table_params.aoColumns = [
				{"sWidth":"10%", "sType":"numeric"}, null, null, null
				];
			oTable = $('#domain-table').dataTable(table_params);
			
			$.each(data, function(index, obj) {
		
				var domain_url_obj = domain_mapping_obj[obj.source];
				var domainID = obj.domain_name;
			
				if (obj.source.match('JASPAR')) {
					jaspar.domain_name = obj.domain_name;
					jaspar.description = obj.description;
					jaspar.url = domain_url_obj.url;
					jaspar.database = domain_url_obj.database;
					
		
				} else {
					if (obj.source.match('Gene3D')) {
						domainID = domainID.replace('G3DSA:', '');
 				
					}
		
					url = domain_url_obj.url + domainID; 
					
					$('#domain-table').dataTable().fnAddData([
						obj.start_coord + '-' + obj.stop_coord,
						'<a href=\''+ url + '\'>' + obj.domain_name + '</a>',
						obj.description,
						domain_url_obj.database
						]);
				}
			}); 
			
			if (Object.keys(jaspar).length > 0) {

				$('#domain-table').dataTable().fnAddData([
					'',
					'<a href=\'' + jaspar.url + jaspar.domain_name + '\'>' + jaspar.domain_name + '</a href>',
					jaspar.description,
					'JASPAR'
				]);
			}
			
			$("#domains-nav").replaceWith("<li id='domains-li'><a href='#domains'>Domains and Motifs</a></li>");

			$("#domains").append("<div class='spacer'></div>");
	//		console.log('data length: '+ data.length);	
	//		$("#num_doms").replaceWith(data.length);

		} // end else
	refresh_scrollspy();
	});
}

function load_regulators(query,feat_title) {
	
	var query = query;
	var display = feat_title;
	var num_genes = new Object();
	$.getJSON('http://sgd-dev-2.stanford.edu/yeastmine_backend/regulation/regulator_count/' + query)
	.done(function(data) {
		 num_regulators = data;

		if (num_regulators > 0) {

		$('#regulators').append("<div class='spacer'><hr></spacer>");
		$('#regulators').append("<h2>Regulators of " + display + " (" + num_regulators +" total)</h2>");

			
		$("#regulators").append("<table id='regulator-table'><thead><tr><th>Systematic name</th><th>Gene name</th><th>Evidence</th><th>References</th><th>Source</th></tr></thead><tbody>");
	var reg_table_params = new Object();

		if (num_regulators > 10) {
			reg_table_params = pagination_dT;

		} else {

			reg_table_params = no_pagination_dT;
		}

		reg_table_params.sAjaxSource= 'http://sgd-dev-2.stanford.edu/yeastmine_backend/regulation/target/' + query; 

		reg_table_params.aoColumns = [
				{"sWidth":"10%"}, {"sWidth":"10%"},null, null,{"sWidth":"10%"}
			];
			
		reg_oTable = $('#regulator-table').dataTable(reg_table_params);

	$.getJSON('http://sgd-dev-2.stanford.edu/yeastmine_backend/regulation/regulator/' + query)
	.done(function(data) {
		if ($.isEmptyObject(data)) {
			console.log('no regulators returned');
		} else {

			reg_oTable.fnAddData(data.aaData);

//			$.each(data, function(index, obj) {
//				reg_oTable.fnAddData([
//					'<a href=\''+ feat_url + obj.dbid +'\'>' + obj.feature_name +'</a>',
//					obj.gene_name,
					obj.evidence,
//					'<a href=\'' + ref_url + obj.pmid + '\'>' + obj.citation + '</a>',
//					obj.source
//					]);
//
//				if (num_genes.hasOwnProperty(obj.feature_name)) {
//					num_genes[obj.feature_name] = num_genes[obj.feature_name] + 1;
//				} else {
//					num_genes[obj.feature_name] = 1;
//				}
//
//			});
//
		
//			$('#num-regs').append(Object.keys(num_genes).length);
				
//			$("span#regulators-nav").replaceWith("<li id='regulators-li'><a href='#regulators'>Regulators</a></li>");

		refresh_scrollspy();
		} // end else
	
		refresh_scrollspy();
	});
	}// end if statement;
	});
}

